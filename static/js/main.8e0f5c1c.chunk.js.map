{"version":3,"sources":["components/Ball.tsx","components/Paddle.tsx","components/Pong.tsx","components/LoginPage.tsx","comms/TopicPublisher.js","comms/TopicSubscriber.js","comms/CommHandler.js","tools/LeaderboardProcessor.js","components/Pipe.jsx","components/Leaderboard.jsx","App.tsx","serviceWorker.js","index.js"],"names":["Ball","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","wasDestroyed","state","curX","initialX","curY","initialY","dx","Math","cos","angle","velocity","dy","sin","Ballstyle","position","top","left","display","react_default","a","createElement","style","height","width","cx","cy","r","fill","playerColor","vertical","arguments","length","undefined","horizontal","setState","prevState","React","Component","Paddle","Paddlestyle","playHeight","background","color","distanceFromWall","className","ballx","bally","DIST_FROM_HORIZONTAL_WALL","atan2","Pong","fieldInput","paddleRef","updaterID","needToUpdate","paddleDistFromWall","balls","originatingPlayer","slice","newBall","console","log","push","nextBalls","idx","ball","refs","bounce","PLAYHEIGHT","newAngle","redirectBall","bounceOffPaddle","loseCallback","PLAYWIDTH","sendBallCallBack","splice","updatePosition","_this2","border","map","elem","components_Ball","assign","key","ref","components_Paddle","_this3","focus","document","addEventListener","e","handleInput","prevProps","_this4","setTimeout","repositionBalls","move","LoginPage","enteredUsername","ballColor","updateUsername","bind","assertThisInitialized","toUpperCase","onClick","handleJoin","value","onChange","lib","c","changeColor","username","target","hex","TopicPublisher","topicName","factoryProps","solace","SolclientFactoryProperties","SolclientFactory","init","publisher","connected","connect","session","hosturl","lastIndexOf","pass","vpn","createSession","url","vpnName","userName","password","error","toString","on","SessionEventCode","UP_NOTICE","sessionEvent","CONNECT_FAILED_ERROR","infoStr","DISCONNECTED","dispose","connectToSolace","publish","messageText","message","createMessage","setDestination","createTopicDestination","setBinaryAttachment","setDeliveryMode","MessageDeliveryModeType","DIRECT","send","disconnect","require","TopicSubscriber","receiveHandler","subscriber","subscribed","subscribe","SUBSCRIPTION_ERROR","correlationKey","SUBSCRIPTION_OK","MESSAGE","JSON","parse","Ok","getBinaryAttachment","dump","unsubscribe","CommHandler","joinHandler","ballHandler","leaveHandler","leaderboardHandler","pingHandler","joinPublisher","ballPublisher","leavePublisher","pongPublisher","joinSubscriber","ballSubscriber","leaveSubscriber","leaderboardSubscriber","pingSubscriber","publishJoin","sessionId","name","stringify","publishBall","targetSessionId","publishLeave","reason","killedBy","publishPong","publishTest","item","testPublisher","compareLifetimes","b","timeAlive","Array","prototype","sum","prop","total","i","_len","Pipe","react","y","backgroundColor","borderLeftColor","Leaderboard","x","leaderboard","player","components_Pipe","App","commHandler","pong","joined","lost","leaderboardCallBack","leaveGame","loseGame","sendBall","ballCallBack","pingCallBack","joinCallBack","leaveCallBack","v4","offset","Date","now","time","sort","processLeaderBoardList","generateBall","source","colour","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","p","err","return","ballID","addBall","findPlayerByHeight","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","components_Pong","components_Leaderboard","PONG_WIDTH","components_LoginPage","join","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qOA+EeA,sBA1Db,SAAAA,EAAYC,GAAmB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAC7BE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAFRQ,cAAwB,EAGtBP,EAAKQ,MAAQ,CACXC,KAAMV,EAAMW,SACZC,KAAMZ,EAAMa,SACZC,GAAIC,KAAKC,IAAIhB,EAAMiB,OAASjB,EAAMkB,SAClCC,GAAIJ,KAAKK,IAAIpB,EAAMiB,OAASjB,EAAMkB,UANPjB,wEAW7B,IAAIoB,EAAkC,CAClCC,SAAU,WACVC,IAAQnB,KAAKK,MAAMG,KAAK,KACxBY,KAASpB,KAAKK,MAAMC,KAAK,KACzBe,QAAS,SAEb,OACEC,EAAAC,EAAAC,cAAA,OAAKC,MAAOR,EAAWS,OAAQ,OAAwBC,MAAO,QAC5DL,EAAAC,EAAAC,cAAA,UACEI,GAAI,OACJC,GAAI,OACJC,EAAG,OACHC,KAAM/B,KAAKJ,MAAMoC,gDAUkC,IAApDC,IAAoDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAA3BG,EAA2BH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACtDD,GACDjC,KAAKsC,SAAS,CAACvB,IAAIf,KAAKK,MAAMU,KAE7BsB,GACDrC,KAAKsC,SAAS,CAAC5B,IAAIV,KAAKK,MAAMK,8CAOhCV,KAAKsC,SAAS,SAACC,GAAa,MAAO,CACjCjC,KAAMiC,EAAUjC,KAAOiC,EAAU7B,GACjCF,KAAM+B,EAAU/B,KAAO+B,EAAUxB,8CAGrBF,GACdb,KAAKsC,SAAS,CACZ5B,GAAIC,KAAKC,IAAIC,GAASb,KAAKJ,MAAMkB,SACjCC,GAAIJ,KAAKK,IAAIH,GAASb,KAAKJ,MAAMkB,kBAvDpB0B,IAAMC,YC8BVC,cAlCb,SAAAA,EAAY9C,GAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0C,IACvB7C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4C,GAAAvC,KAAAH,KAAMJ,KACDS,MAAQ,GAFUR,wEAMnB,IAAI8C,EAAoC,CACpCjB,OAAW1B,KAAKJ,MAAMgD,WAAW,EAAE,KACnCjB,MAAO,OACPkB,WAAY7C,KAAKJ,MAAMkD,MACvB5B,SAAU,WACVC,IAAQnB,KAAKJ,MAAMmD,iBAAiB,KACpC3B,KAAM,QAEV,OACIE,EAAAC,EAAAC,cAAA,OAAKwB,UAAY,SAASvB,MAASkB,yCAU9BM,EAAcC,GACvB,IAEMnC,EAAKmC,GAFAlD,KAAKJ,MAAMmD,iBAAmB/C,KAAKJ,MAAMgD,WAAW,GAGzDlC,EAAKwC,EAFAC,GAGX,OAAOxC,KAAKyC,MAAMrC,EAAGL,UA/BR8B,IAAMC,WC2HZY,cAhHb,SAAAA,EAAYzD,GAAgB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqD,IAC1BxD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuD,GAAAlD,KAAAH,KAAMJ,KAJR0D,WAAsC,KAGVzD,EAF5B0D,UAA2B,KAEC1D,EAD5B2D,eAC4B,EAE1B3D,EAAKQ,MAAQ,CACXoD,cAAc,EACdC,mBAAoB,GACpBC,MAAO,CACL,CACEpD,SAAW,IACXE,SAAW,IACXuB,YAAcnC,EAAKD,MAAMoC,YACzBlB,SAAU,EACVD,OAAQ,EACR+C,kBAAmB,QAZC/D,uEAkBpBU,EAAiBE,EAAiBuB,EAAoBlB,EAAiBD,EAAc+C,GAC3F,IAAID,EAAQ3D,KAAKK,MAAMsD,MAAME,QACzBC,EAAmB,CACrBvD,SAAWA,EACXE,SAAWA,EACXuB,YAAcA,EACdlB,SAAUA,EACVD,MAAOA,EACP+C,kBAAmBA,GAErBG,QAAQC,IAAI,kCACZL,EAAMM,KAAKH,GACX9D,KAAKsC,SAAS,CACZqB,MAAOA,8CAOT,IAFA,IAAMO,EAAyB,GACzBP,EAAQ3D,KAAKK,MAAMsD,MACjBQ,EAAI,EAAEA,EAAIR,EAAMxB,OAAQgC,IAAM,CACpCJ,QAAQC,IAAI,yBAA2BL,EAAMxB,QAC7C,IAAIiC,EAAQpE,KAAKqE,KAAKV,EAAMQ,GAAKP,mBACjC,GAAIQ,IAAQA,EAAKhE,aAAjB,CAOA,IAHGgE,EAAK/D,MAAMG,KAhED,GAFA,KAkEmC4D,EAAK/D,MAAMG,KAAO,IAChE4D,EAAKE,SAEHF,EAAK/D,MAAMG,MAAQR,KAAKK,MAAMqD,oBAAsBU,EAAK/D,MAAMG,MAAQR,KAAKK,MAAMqD,mBAAmBa,KAAkBH,EAAK/D,MAAMC,MAAQ,IACtH,OAAnBN,KAAKuD,UAAmB,CACzB,IAAMiB,EAAWxE,KAAKuD,UAAUkB,aAAaL,EAAK/D,MAAMC,KAAM8D,EAAK/D,MAAMG,MACzE4D,EAAKM,gBAAgBF,GAGtBJ,EAAK/D,MAAMC,MAAQ,EACpBN,KAAKJ,MAAM+E,aAAa,OAAQ,sBACxBP,EAAK/D,MAAMC,MAAQsE,KAC3B5E,KAAKJ,MAAMiF,iBAAiBT,EAAK/D,MAAMG,MACvC4D,EAAKhE,cAAe,EACpBuD,EAAMmB,OAAOX,EAAK,GAClBA,GAAO,EACPJ,QAAQC,IAAI,yBAAyBL,EAAMxB,UAE3CiC,EAAKW,iBACLb,EAAUD,KAAKN,EAAMQ,MAGzBnE,KAAKsC,SAAS,CACZqB,MAAMO,EACNT,cAAc,qCAIT,IAAAuB,EAAAhF,KACP,OACIsB,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACC,OAAU1B,KAAKJ,MAAM8B,OAAO,KAAMC,MAAU3B,KAAKJ,MAAM+B,MAAM,KAAMsD,OAAQ,QAAS/D,SAAW,WAAYC,IAAK,QACzHnB,KAAKK,MAAMsD,MAAMuB,IAAI,SAACC,GAAD,OAAU7D,EAAAC,EAAAC,cAAC4D,EAADtF,OAAAuF,OAAA,CAAMC,IAAKH,EAAKvB,mBAAuBuB,EAAvC,CAA6CI,IAAKJ,EAAKvB,uBACvFtC,EAAAC,EAAAC,cAACgE,EAAD,CAAQ5C,WAlGA,IAkGwBG,iBAAkB/C,KAAKK,MAAMqD,mBAAoBZ,MAAO9C,KAAKJ,MAAMoC,YAAauD,IAAK,SAAAA,GAAG,OAAEP,EAAKzB,UAAUgC,KACxIvF,KAAKK,MAAMsD,MAAMxB,oDAIR,IAAAsD,EAAAzF,KACM,OAApBA,KAAKsD,YAAqBtD,KAAKsD,WAAWoC,QAE7CC,SAASC,iBAAiB,WAAY,SAACC,GAAD,OAAKJ,EAAKK,YAAYD,KAAI,GAChE7F,KAAKsC,SAAS,CAACmB,cAAa,+FAKXsC,EAAqBxD,GAAoB,IAAAyD,EAAAhG,KACvDA,KAAKK,MAAMoD,eAAiBlB,EAAUkB,eACvCwC,WAAW,kBAAMD,EAAKE,mBAAmB,IACzClG,KAAKsC,SAAS,CAACmB,cAAa,yCAKpBoC,GACV,IAAIM,EAAO,EACE,KAATN,EAAEP,KAActF,KAAKK,MAAMqD,mBAAqBa,IAClD4B,EAAO,GACW,KAATN,EAAEP,KAActF,KAAKK,MAAMqD,oBAAsB,IAC1DyC,GAAQ,IAEVnG,KAAKsC,SAAS,CACZoB,mBAAoB1D,KAAKK,MAAMqD,mBAAqByC,WA/GvC1D,qBCiEJ2D,cArEX,SAAAA,EAAYxG,GAAuB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoG,IAC/BvG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsG,GAAAjG,KAAAH,KAAMJ,KACDS,MAAQ,CACTgG,gBAAiB,GACjBC,UAAW,WAEfzG,EAAK0G,eAAiB1G,EAAK0G,eAAeC,KAApB1G,OAAA2G,EAAA,EAAA3G,QAAA2G,EAAA,EAAA3G,CAAAD,KANSA,wEAQpB,IAAAmF,EAAAhF,KACX,OACIsB,EAAAC,EAAAC,cAAA,OAAKwB,UAAY,aACb1B,EAAAC,EAAAC,cAAA,iCAEK,IAAMxB,KAAKK,MAAMgG,gBAAgBK,cAAgB,OAEtDpF,EAAAC,EAAAC,cAAA,UAAQmF,QAAS,kBAAM3B,EAAK4B,cAAcnF,MAAO,CAACoB,WAAW7C,KAAKK,MAAMiG,YAAxE,aAGAhF,EAAAC,EAAAC,cAAA,SAAOqF,MAAS7G,KAAKK,MAAMgG,gBAAiBS,SAAY9G,KAAKuG,iBAE7DjF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,gCAGAF,EAAAC,EAAAC,cAACuF,EAAA,cAAD,CAAejE,MAAQ9C,KAAKK,MAAMiG,UAAWQ,SAAU,SAACE,GAAD,OAAKhC,EAAKiC,YAAYD,MAE7E1F,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,mBAGAF,EAAAC,EAAAC,cAAA,kKAGIF,EAAAC,EAAAC,cAAA,WAHJ,wIAMIF,EAAAC,EAAAC,cAAA,YAGJF,EAAAC,EAAAC,cAAA,sBAGAF,EAAAC,EAAAC,cAAA,2DAEIF,EAAAC,EAAAC,cAAA,WAFJ,wEAIIF,EAAAC,EAAAC,cAAA,uDAMiBY,IAA1BpC,KAAKJ,MAAMgH,YACV5G,KAAKJ,MAAMgH,WAAW5G,KAAKK,MAAMgG,gBAAiBrG,KAAKK,MAAMiG,kDAItDY,GACZlH,KAAKsC,SAAS,CACT+D,gBAAiBa,EAASC,OAAON,4CAG7B/D,GACR9C,KAAKsC,SAAS,CACVgE,UAAWxD,EAAMsE,aAjEL5E,IAAMC,4BC4Gf4E,EArHM,SAAUC,GAC3B,IAAIC,EAAe,IAAIC,IAAOC,2BAE9BD,IAAOE,iBAAiBC,KAAKJ,GAE7B,IAAIK,EAAY,CAChBA,QAAoB,MA4GpB,OA3GAA,EAAUN,UAAYA,EACtBM,EAAUC,WAAY,EAEtB9D,QAAQC,IAAI,6BAA+B4D,EAAUN,UAAY,6BAGjEM,EAAUE,QAAU,WAEhB,GAA0B,OAAtBF,EAAUG,QAAd,CAIA,IAAIC,EAxBI,2CA0BR,GAAwC,IAApCA,EAAQC,YAAY,QAAS,IAAiD,IAArCD,EAAQC,YAAY,SAAU,IACjC,IAAtCD,EAAQC,YAAY,UAAW,IAAmD,IAAvCD,EAAQC,YAAY,WAAY,GAD/E,CAKA,IAAIf,EA9BG,sBA+BHgB,EA7BC,6BA8BDC,EA/BA,mBAgCJ,GAAKH,EAAL,CAIAjE,QAAQC,IAAI,kDAAoDgE,GAChEjE,QAAQC,IAAI,oBAAsBkD,GAClCnD,QAAQC,IAAI,mCAAqCmE,GAEjD,IACIP,EAAUG,QAAUP,IAAOE,iBAAiBU,cAAc,CAEtDC,IAAUL,EACVM,QAAUH,EACVI,SAAUrB,EACVsB,SAAUN,IAEhB,MAAOO,GACL1E,QAAQC,IAAIyE,EAAMC,YAGtBd,EAAUG,QAAQY,GAAGnB,IAAOoB,iBAAiBC,UAAW,SAAUC,GAC9DlB,EAAUC,WAAY,EACtB9D,QAAQC,IAAI,mEAEhB4D,EAAUG,QAAQY,GAAGnB,IAAOoB,iBAAiBG,qBAAsB,SAAUD,GACzElB,EAAUC,WAAY,EACtB9D,QAAQC,IAAI,4CAA8C8E,EAAaE,QACnE,yDAERpB,EAAUG,QAAQY,GAAGnB,IAAOoB,iBAAiBK,aAAc,SAAUH,GACjElB,EAAUC,WAAY,EACtB9D,QAAQC,IAAI,iBACc,OAAtB4D,EAAUG,UACVH,EAAUG,QAAQmB,UAClBtB,EAAUG,QAAU,QAI5BH,EAAUuB,uBArCNpF,QAAQC,IAAI,iFAPZD,QAAQC,IAAI,8EAPZD,QAAQC,IAAI,qDAwDpB4D,EAAUuB,gBAAkB,WACxB,IACIvB,EAAUG,QAAQD,UACpB,MAAOW,GACL1E,QAAQC,IAAIyE,EAAMC,cAK1Bd,EAAUwB,QAAU,SAAUC,GAC1B,GAA0B,OAAtBzB,EAAUG,QAAkB,CAC5B,IAAIuB,EAAU9B,IAAOE,iBAAiB6B,gBACtCD,EAAQE,eAAehC,IAAOE,iBAAiB+B,uBAAuB7B,EAAUN,YAChFgC,EAAQI,oBAAoBL,GAC5BC,EAAQK,gBAAgBnC,IAAOoC,wBAAwBC,QACvD9F,QAAQC,IAAI,uBAAyBqF,EAAc,eAAiBzB,EAAUN,UAAY,QAC1F,IACIM,EAAUG,QAAQ+B,KAAKR,GACvBvF,QAAQC,IAAI,sBACd,MAAOyE,GACL1E,QAAQC,IAAIyE,EAAMC,kBAGtB3E,QAAQC,IAAI,mEAKpB4D,EAAUmC,WAAa,WAGnB,GAFAnC,EAAUC,WAAY,EACtB9D,QAAQC,IAAI,+CACc,OAAtB4D,EAAUG,QACV,IACIH,EAAUG,QAAQgC,aACpB,MAAOtB,GACL1E,QAAQC,IAAIyE,EAAMC,iBAGtB3E,QAAQC,IAAI,4CAIb4D,GCtHPJ,EAASwC,EAAQ,IAyLNC,EAlLO,SAAU3C,EAAW4C,GACvC,IAAI3C,EAAe,IAAIC,EAAOC,2BAE9BD,EAAOE,iBAAiBC,KAAKJ,GAC7B,IAAI4C,EAAa,CACjBA,QAAqB,MA2KrB,OA1KAA,EAAW7C,UAAYA,EACvB6C,EAAWC,YAAa,EACxBD,EAAWtC,WAAY,EAcvB9D,QAAQC,IAAI,8BAAgCmG,EAAW7C,UAAY,6BAGnE6C,EAAWrC,QAAU,WAEjB,GAA2B,OAAvBqC,EAAWpC,QAAf,CAIA,IAAIC,EApCE,2CAsCN,GAAwC,IAApCA,EAAQC,YAAY,QAAS,IAAiD,IAArCD,EAAQC,YAAY,SAAU,IACjC,IAAtCD,EAAQC,YAAY,UAAW,IAAmD,IAAvCD,EAAQC,YAAY,WAAY,GAD/E,CAKA,IAAIf,EA1CG,sBA2CHgB,EAzCD,6BA0CCC,EA3CF,mBA4CF,GAAKH,EAAL,CAIAjE,QAAQC,IAAI,kDAAoDgE,GAChEjE,QAAQC,IAAI,oBAAsBkD,GAClCnD,QAAQC,IAAI,mCAAqCmE,GAEjD,IACIgC,EAAWpC,QAAUP,EAAOE,iBAAiBU,cAAc,CAEvDC,IAAUL,EACVM,QAAUH,EACVI,SAAUrB,EACVsB,SAAUN,IAEhB,MAAOO,GACL1E,QAAQC,IAAIyE,EAAMC,YAGtByB,EAAWpC,QAAQY,GAAGnB,EAAOoB,iBAAiBC,UAAW,SAAUC,GAC/D/E,QAAQC,IAAI,0DACZmG,EAAWE,YACXF,EAAWtC,WAAY,IAE3BsC,EAAWpC,QAAQY,GAAGnB,EAAOoB,iBAAiBG,qBAAsB,SAAUD,GAC1EqB,EAAWtC,WAAY,EACvB9D,QAAQC,IAAI,4CAA8C8E,EAAaE,QACnE,yDAERmB,EAAWpC,QAAQY,GAAGnB,EAAOoB,iBAAiBK,aAAc,SAAUH,GAClEqB,EAAWtC,WAAY,EACvB9D,QAAQC,IAAI,iBACZmG,EAAWC,YAAa,EACG,OAAvBD,EAAWpC,UACXoC,EAAWpC,QAAQmB,UACnBiB,EAAWpC,QAAU,QAG7BoC,EAAWpC,QAAQY,GAAGnB,EAAOoB,iBAAiB0B,mBAAoB,SAAUxB,GACxE/E,QAAQC,IAAI,8BAAgC8E,EAAayB,kBAE7DJ,EAAWpC,QAAQY,GAAGnB,EAAOoB,iBAAiB4B,gBAAiB,SAAU1B,GACjEqB,EAAWC,YACXD,EAAWC,YAAa,EACxBrG,QAAQC,IAAI,yCAA2C8E,EAAayB,kBAEpEJ,EAAWC,YAAa,EACxBrG,QAAQC,IAAI,qCAAuC8E,EAAayB,gBAChExG,QAAQC,IAAI,yCAIpBmG,EAAWpC,QAAQY,GAAGnB,EAAOoB,iBAAiB6B,QAAS,SAAUnB,GAC7DY,EAAeQ,KAAKC,MAAMrB,EAAQsB,KAClC7G,QAAQC,IAAI,sBAAwBsF,EAAQuB,sBAAwB,gBAChEvB,EAAQwB,UAIjBX,EAAWhB,uBA3DNpF,QAAQC,IAAI,iFAPZD,QAAQC,IAAI,8EAPZD,QAAQC,IAAI,8CA6EpBmG,EAAWhB,gBAAkB,WACzB,IACIgB,EAAWpC,QAAQD,UACrB,MAAOW,GACL1E,QAAQC,IAAIyE,EAAMC,cAK1ByB,EAAWE,UAAY,WACnB,GAA2B,OAAvBF,EAAWpC,QACX,GAAIoC,EAAWC,WACXrG,QAAQC,IAAI,0BAA4BmG,EAAW7C,UAC7C,wCACH,CACHvD,QAAQC,IAAI,yBAA2BmG,EAAW7C,WAClD,IACI6C,EAAWpC,QAAQsC,UACf7C,EAAOE,iBAAiB+B,uBAAuBU,EAAW7C,YAC1D,EACA6C,EAAW7C,UACX,KAEN,MAAOmB,GACL1E,QAAQC,IAAIyE,EAAMC,kBAI1B3E,QAAQC,IAAI,qEAKpBmG,EAAWY,YAAc,WACrB,GAA2B,OAAvBZ,EAAWpC,QACX,GAAIoC,EAAWC,WAAY,CACvBrG,QAAQC,IAAI,6BAA+BmG,EAAW7C,WACtD,IACI6C,EAAWpC,QAAQgD,YACfvD,EAAOE,iBAAiB+B,uBAAuBU,EAAW7C,YAC1D,EACA6C,EAAW7C,UACX,KAEN,MAAOmB,GACL1E,QAAQC,IAAIyE,EAAMC,kBAGtB3E,QAAQC,IAAI,2DACNmG,EAAW7C,UAAY,UAGjCvD,QAAQC,IAAI,uEAKpBmG,EAAWJ,WAAa,WAGpB,GAFAI,EAAWtC,WAAY,EACvB9D,QAAQC,IAAI,+CACe,OAAvBmG,EAAWpC,QACX,IACIoC,EAAWpC,QAAQgC,aACrB,MAAOtB,GACL1E,QAAQC,IAAIyE,EAAMC,iBAGtB3E,QAAQC,IAAI,4CAIbmG,GC1GIa,EA5EX,SAAAA,EAAYC,EAAaC,EAAaC,EAAcC,EAAoBC,GAAavL,OAAAC,EAAA,EAAAD,CAAAE,KAAAgL,GAAAhL,KAoBrF8H,QAAU,WAGN9H,KAAKsL,cAAcxD,UACnB9H,KAAKuL,cAAczD,UACnB9H,KAAKwL,eAAe1D,UACpB9H,KAAKyL,cAAc3D,UAInB9H,KAAK0L,eAAe5D,UACpB9H,KAAK2L,eAAe7D,UACpB9H,KAAK4L,gBAAgB9D,UACrB9H,KAAK6L,sBAAsB/D,UAC3B9H,KAAK8L,eAAehE,WAlC4D9H,KAqCpF+L,YAAc,SAASC,EAAWC,EAAMnJ,GACpC,IAAIwG,EAAU,CACV0C,UAAWA,EACXC,KAAMA,EACNnJ,MAAOA,GAEX9C,KAAKsL,cAAclC,QAAQsB,KAAKwB,UAAU5C,KA3CsCtJ,KA6CpFmM,YAAc,SAASH,EAAWI,EAAiBvL,EAAOC,GACtD,IAAIwI,EAAU,CACV0C,UAAWA,EACXI,gBAAiBA,EACjBvL,MAAOA,EACPC,SAAUA,GAEdd,KAAKuL,cAAcnC,QAAQsB,KAAKwB,UAAU5C,KApDsCtJ,KAsDpFqM,aAAe,SAASL,EAAWM,EAAQC,GACvC,IAAIjD,EAAU,CACV0C,UAAWA,EACXM,OAAQA,EACRC,SAAUA,GAEdvM,KAAKwL,eAAepC,QAAQsB,KAAKwB,UAAU5C,KA5DqCtJ,KA8DpFwM,YAAc,SAASR,GACnB,IAAI1C,EAAU,CACV0C,UAAWA,GAEfhM,KAAKyL,cAAcrC,QAAQsB,KAAKwB,UAAU5C,KAlEsCtJ,KAoEpFyM,YAAc,SAASC,GACnB,IAAIpD,EAAU,CACVoD,KAAMA,GAEV1M,KAAK2M,cAAcvD,QAAQsB,KAAKwB,UAAU5C,KAhE1CtJ,KAAKsL,cAAgBjE,EAAe,QACpCrH,KAAKuL,cAAgBlE,EAAe,QACpCrH,KAAKwL,eAAiBnE,EAAe,SACrCrH,KAAKyL,cAAgBpE,EAAe,QAEpCrH,KAAK0L,eAAiBzB,EAAgB,OAAQgB,GAC9CjL,KAAK2L,eAAiB1B,EAAgB,OAAQiB,GAC9ClL,KAAK4L,gBAAkB3B,EAAgB,QAASkB,GAChDnL,KAAK6L,sBAAwB5B,EAAgB,cAAemB,GAC5DpL,KAAK8L,eAAiB7B,EAAgB,OAAQoB,YCTtD,SAASuB,EAAiBC,EAAGtL,GACzB,OAAIA,EAAEuL,UAAYD,EAAEC,WAAmB,EACnCvL,EAAEuL,UAAYD,EAAEC,UAAkB,EAC/B,EAGXC,MAAMC,UAAUC,IAAM,SAASC,GAE3B,IADA,IAAIC,EAAQ,EACHC,EAAI,EAAGC,EAAOrN,KAAKmC,OAAQiL,EAAEC,EAAMD,IACxCD,GAASnN,KAAKoN,GAAGF,GAErB,OAAOC,GCpBX,IAqCeG,cAjCX,SAAAA,EAAY1N,GAAO,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAsN,GAAAxN,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwN,GAAAnN,KAAAH,KACTJ,0EAGN,OACI0B,EAAAC,EAAAC,cAAC+L,EAAA,SAAD,KACIjM,EAAAC,EAAAC,cAAA,MAAIG,MAAO3B,KAAKJ,MAAM+B,MACdD,OAAQ1B,KAAKJ,MAAM8B,OACnB8L,EAAGxN,KAAKJ,MAAM4N,GAElBlM,EAAAC,EAAAC,cAAA,MACEC,MAAO,CACLgM,gBAAiBzN,KAAKJ,MAAMkD,MAC5BmC,OAAQ,mBACRyI,gBAAiB1N,KAAKJ,MAAMkD,QAE3B9C,KAAKJ,MAAMqM,eAjBjBxJ,aCwBJkL,cAxBX,SAAAA,EAAY/N,GAAO,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAA2N,GAAA7N,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6N,GAAAxN,KAAAH,KACTJ,0EAED,IAAAC,EAAAG,KACL,OACIsB,EAAAC,EAAAC,cAAA,SAAOE,OAAQ1B,KAAKJ,MAAM8B,OAAQC,MAAO3B,KAAKJ,MAAM+B,MAAOiM,EAAG5N,KAAKJ,MAAMgO,EAAGJ,EAAGxN,KAAKJ,MAAM4N,GACrFxN,KAAKJ,MAAMiO,YAAY3I,IAAI,SAAC4I,GACzB,OAAOxM,EAAAC,EAAAC,cAACuM,EAAD,CAAMrM,OAAQoM,EAAOpM,OACxBsK,UAAW8B,EAAO9B,UAClBC,KAAM6B,EAAO7B,KACbnJ,MAAOgL,EAAOhL,MACdnB,MAAO9B,EAAKD,MAAM+B,MAClB6L,EAAGM,EAAON,cAbR/K,aC0LXuL,cAxIX,SAAAA,EAAYpO,GAAmB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgO,IAC3BnO,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkO,GAAA7N,KAAAH,KAAMJ,KAHVqO,iBAE+B,EAAApO,EAD/BqO,UAC+B,EAE3BrO,EAAKQ,MAAQ,CACT8N,QAAQ,EACRlC,KAAM,GACNnJ,MAAO,UACPkJ,UAAW,GACX6B,YAAa,GACbO,MAAM,GAEVvO,EAAKqO,KAAO,KACZrO,EAAKwO,oBAAsBxO,EAAKwO,oBAAoB7H,KAAzB1G,OAAA2G,EAAA,EAAA3G,QAAA2G,EAAA,EAAA3G,CAAAD,KAC3BA,EAAKyO,UAAYzO,EAAKyO,UAAU9H,KAAf1G,OAAA2G,EAAA,EAAA3G,QAAA2G,EAAA,EAAA3G,CAAAD,KACjBA,EAAK0O,SAAW1O,EAAK0O,SAAS/H,KAAd1G,OAAA2G,EAAA,EAAA3G,QAAA2G,EAAA,EAAA3G,CAAAD,KAChBA,EAAK2O,SAAW3O,EAAK2O,SAAShI,KAAd1G,OAAA2G,EAAA,EAAA3G,QAAA2G,EAAA,EAAA3G,CAAAD,KAChBA,EAAK4O,aAAe5O,EAAK4O,aAAajI,KAAlB1G,OAAA2G,EAAA,EAAA3G,QAAA2G,EAAA,EAAA3G,CAAAD,KACpBA,EAAK6O,aAAe7O,EAAK6O,aAAalI,KAAlB1G,OAAA2G,EAAA,EAAA3G,QAAA2G,EAAA,EAAA3G,CAAAD,KACpBA,EAAKoO,YAAc,IAAIjD,EAAYnL,EAAK8O,aAAc9O,EAAK4O,aAAc5O,EAAK+O,cAAe/O,EAAKwO,oBAAqBxO,EAAK6O,cAC5H7O,EAAKoO,YAAYnG,UAlBUjI,oEAqB5BoM,EAAanJ,GAChB,IAAIkJ,EAAmB6C,eACvB7O,KAAKsC,SAAS,CACV6L,QAAQ,EACRlC,KAAMA,EACNnJ,MAAOA,EACPkJ,UAAWA,IAEfhM,KAAKiO,YAAYlC,YAAYC,EACAC,EACAnJ,+CAEXwG,GAClB,IAAIuE,EAAcvE,EAAQuE,aHzF9B,SAAgCA,EAAanM,GACzC,IAAIyL,EAAQU,EAAYZ,IAAI,aACxB6B,EAAS,EACbjB,EAAY3I,IAAI,SAAC4I,GACbA,EAAOhB,UAAYiC,KAAKC,MAAQlB,EAAOmB,KACvCnB,EAAOpM,OAASA,EAAOoM,EAAOhB,UAAUK,EACxCW,EAAON,EAAIsB,EACXA,GAAUhB,EAAOpM,SAErBmM,EAAYqB,KAAKtC,GGiFjBuC,CAAuBtB,EAjFA,KAkFvB7N,KAAKsC,SAAS,CACZuL,YAAaA,yCAGJvE,GACXvF,QAAQC,IAAI,gBAAiBsF,yCAEjBA,GACZvF,QAAQC,IAAI,iBAAkBsF,wCAEnBA,GACXvF,QAAQC,IAAI,oBACRhE,KAAKK,MAAM2L,WAAa1C,EAAQ8C,kBAClCrI,QAAQC,IAAI,uBAEZhE,KAAKoP,aAAa9F,EAAQxI,SAAUwI,EAAQzI,MAAOyI,EAAQ0C,mDAI7DjI,QAAQC,IAAI,iBACZhE,KAAKiO,YAAYzB,YAAYxM,KAAKK,MAAM2L,gDAG7BlL,EAAiBD,EAAcwO,GAC1CtL,QAAQC,IAAI,mCAAqClD,EAAW,YAAcD,GAC1E,IAAIyO,EAAS,QAF2CC,GAAA,EAAAC,GAAA,EAAAC,OAAArN,EAAA,IAGxD,QAAAsN,EAAAC,EAAa3P,KAAKK,MAAMwN,YAAxB+B,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAoC,KAA5BS,EAA4BN,EAAA7I,MAClC,GAAGmJ,EAAEhE,YAAcqD,EAAO,CACxBC,EAASU,EAAElN,MACX,QANoD,MAAAmN,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,GASxD,IAAMU,EAAStB,eACZ7O,KAAKkO,OACNlO,KAAKK,MAAMwN,YAAY,GAAG7B,UAC1BhM,KAAKkO,KAAKkC,QAAQ,IAAK,IAAKd,EAAQxO,EAAUD,EAAOsP,sCAI/CnE,EAAkBM,EAAeC,GACzCvM,KAAKsC,SAAS,CACZ6L,QAAQ,IAEVnO,KAAKiO,YAAY5B,aAAaL,EAAWM,EAAQC,oCAG1CD,EAAeC,GAAgB,IAAAvH,EAAAhF,KACtCA,KAAKsC,SAAS,CACZ6L,QAAQ,EACRC,MAAM,IAERnI,WAAW,WACTjB,EAAK1C,SAAS,CACZ8L,MAAM,IAERpJ,EAAKsJ,UAAUtJ,EAAK3E,MAAM2L,UAAWM,EAAQC,IAC5C,sCAGIiB,GACP,IAAIpB,EAAkBpM,KAAKqQ,mBAAmB7C,GAC1CxB,EAAYhM,KAAKK,MAAM2L,UAC3BhM,KAAKiO,YAAY9B,YAAYH,EAAWI,EAAiB,EAAG,8CAG3CoB,GAAS,IAAA8C,GAAA,EAAAC,GAAA,EAAAC,OAAApO,EAAA,IAC1B,QAAAqO,EAAAC,EAAkB1Q,KAAKK,MAAMwN,YAA7B+B,OAAAC,cAAAS,GAAAG,EAAAC,EAAAZ,QAAAC,MAAAO,GAAA,EAAyC,KAAjCxC,EAAiC2C,EAAA5J,MACvC,GAAI2G,GAAGM,EAAON,GAAKA,EAAEM,EAAON,EAAEM,EAAOpM,OACnC,OAAOoM,EAAO9B,WAHQ,MAAAiE,GAAAM,GAAA,EAAAC,EAAAP,EAAA,YAAAK,GAAA,MAAAI,EAAAR,QAAAQ,EAAAR,SAAA,WAAAK,EAAA,MAAAC,qCAQnB,IAAA/K,EAAAzF,KACL,OAAGA,KAAKK,MAAM+N,KAEV9M,EAAAC,EAAAC,cAAA,uBAEIxB,KAAKK,MAAM8N,OAEf7M,EAAAC,EAAAC,cAAC+L,EAAA,SAAD,KACEjM,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACmP,EAAD,CAAMrL,IAAI,WAAWC,IAAK,SAAA2I,GAASzI,EAAKyI,KAAOA,GAAOxM,OAtK7C,IAsKkEC,MArKpE,IAqKuFkM,YAAa7N,KAAKK,MAAMwN,YAAa7L,YAAahC,KAAKK,MAAMyC,MAAO6B,aAAc3E,KAAKuO,SAAU1J,iBAAkB7E,KAAKwO,YAExNlN,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACoP,EAAD,CAAa/C,YAAa7N,KAAKK,MAAMwN,YAAanM,OAzKzC,IAyK8DC,MAAOkP,GAAejD,EAAG,IAAiBJ,EAAE,SAIzHlM,EAAAC,EAAAC,cAAA,UAAQmF,QAAS,kBAAMlB,EAAK6I,UAAU7I,EAAKpF,MAAM2L,UAAW,OAAQ,WAApE,UAIG1K,EAAAC,EAAAC,cAACsP,EAAD,CAAOlK,WAAY,SAACqF,EAAKnJ,GAAN,OAAgB2C,EAAKsL,KAAK9E,EAAKnJ,aAtI/CN,IAAMC,WCxCJuO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOhQ,EAAAC,EAAAC,cAAC+P,EAAD,MAAS5L,SAAS6L,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.8e0f5c1c.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nconst SHAPEWIDTH = 40;\n\nexport interface BallProps {\n    initialX : number;\n    initialY : number;\n    playerColor : string;\n    velocity: number;\n    angle: number;\n    originatingPlayer: string; \n}\n\nexport interface BallState {\n  curX: number;\n  curY: number;\n  dx: number;\n  dy: number;\n}\nclass Ball extends React.Component<BallProps, BallState> {\n  wasDestroyed: boolean = false;\n  constructor(props : BallProps) {\n    super(props);\n    this.state = {\n      curX: props.initialX,\n      curY: props.initialY,\n      dx: Math.cos(props.angle) * props.velocity,\n      dy: Math.sin(props.angle) * props.velocity\n    };\n  }\n\n  render() {\n    let Ballstyle : React.CSSProperties = {\n        position: \"relative\",\n        top: \"\"+this.state.curY+\"px\",\n        left: \"\"+this.state.curX+\"px\",\n        display: \"block\"\n    }\n    return (\n      <svg style={Ballstyle} height={\"\" + SHAPEWIDTH + \"px\"} width={\"\" + SHAPEWIDTH + \"px\"}>\n        <circle \n          cx={\"\" + SHAPEWIDTH/2 + \"px\"} \n          cy={\"\" + SHAPEWIDTH/2 + \"px\"} \n          r={\"\" + SHAPEWIDTH/2 + \"px\"} \n          fill={this.props.playerColor}\n        />\n      </svg>\n    );\n  }\n  /**\n   * bouces off a wall (changes direction)\n   * @param vertical does the bounce vertically?\n   * @param horizontal does the bounce horizontally? (direct bounce)\n   */\n  bounce(vertical:boolean = true, horizontal:boolean = false){\n    if(vertical){\n      this.setState({dy:-this.state.dy});\n    }\n    if(horizontal){\n      this.setState({dx:-this.state.dx});\n    }\n  }\n  /**\n   * moves the ball by increment\n   */\n  updatePosition(){\n    this.setState((prevState)=>{return {\n      curX: prevState.curX + prevState.dx,\n      curY: prevState.curY + prevState.dy\n    }});\n  }\n  bounceOffPaddle(angle:number){\n    this.setState({\n      dx: Math.cos(angle) * this.props.velocity,\n      dy: Math.sin(angle) * this.props.velocity\n    })\n  }\n}\n\nexport default Ball;\n","import React, { Component } from 'react';\n\nconst DIST_FROM_HORIZONTAL_WALL = 20;\nconst PADDLE_WIDTH = 10;\n\ninterface CLASSProps {\n    playHeight : number,\n    /* the distance from VERTICAL wall */\n    distanceFromWall : number,\n    color: string;\n}\n\ninterface CLASSState {\n}\nclass Paddle extends React.Component<CLASSProps, CLASSState> {\n  constructor(props : any) {\n    super(props);\n    this.state = {\n    };\n}\n    render() {\n        let Paddlestyle : React.CSSProperties = {\n            height: \"\"+this.props.playHeight/4+\"px\",\n            width: \"\"+PADDLE_WIDTH+\"px\",\n            background: this.props.color,\n            position: \"absolute\",\n            top: \"\"+this.props.distanceFromWall+\"px\",\n            left: \"\"+DIST_FROM_HORIZONTAL_WALL+\"px\",\n        }\n        return(\n            <div className = \"paddle\" style = {Paddlestyle}>\n            </div>\n        )\n    }\n    /**\n     *\n     * @param ballx x position of ball\n     * @param bally y position of ball\n     * @returns new direction of ball in radians relative to positive x axis\n     */\n    redirectBall(ballx:number, bally:number){\n        const cy = this.props.distanceFromWall + this.props.playHeight/8; //center of paddle y\n        const cx = DIST_FROM_HORIZONTAL_WALL+10; //center of paddle x\n        const dy = bally - cy; //distance y that ball is from paddle center\n        const dx = bally - cx; // distance x that ball is from paddle center\n        return Math.atan2(dy,dx);\n    }\n}\n\nexport default Paddle;\n","import React, { Component, isValidElement } from 'react';\nimport Ball, {BallProps} from './Ball'\nimport Paddle from './Paddle'\n\nconst PLAYHEIGHT = 400;\nconst PLAYWIDTH = 800;\nconst SHAPEWIDTH = 40;\n\ninterface PongProps {\n  height:number,\n  width:number,\n  leaderboard:Array<object>,\n  playerColor:string\n  loseCallback:Function\n  sendBallCallBack:Function\n}\ninterface PongState {\n  paddleDistFromWall: number;\n  balls: BallProps[];\n  needToUpdate: boolean;\n}\nclass Pong extends Component<PongProps, PongState> {\n  fieldInput: HTMLInputElement | null = null;\n  paddleRef: Paddle | null = null;\n  updaterID: any;\n  constructor(props:PongProps){\n    super(props);\n    this.state = {\n      needToUpdate: false,\n      paddleDistFromWall: 20,\n      balls: [\n        {\n          initialX : 500,\n          initialY : 100,\n          playerColor : this.props.playerColor,\n          velocity: 5,\n          angle: -2,\n          originatingPlayer: \"me\"\n        }\n      ]\n    };\n  }\n\n  addBall(initialX:number, initialY:number, playerColor:string, velocity:number, angle:number, originatingPlayer:string){\n    var balls = this.state.balls.slice()\n    var newBall:BallProps= {\n      initialX : initialX,\n      initialY : initialY,\n      playerColor : playerColor,\n      velocity: velocity,\n      angle: angle,\n      originatingPlayer: originatingPlayer,\n    }\n    console.log(\"newball was pushed to the list\")\n    balls.push(newBall);\n    this.setState({\n      balls: balls\n    })\n  }\n\n  repositionBalls() {\n    const nextBalls: BallProps[] = [];\n    const balls = this.state.balls;\n    for(let idx=0;idx<balls.length; idx++){\n      console.log(\"NUMBER OF BALLS LOOP: \" + balls.length);\n      let ball = (this.refs[balls[idx].originatingPlayer] as Ball);\n      if(!ball || ball.wasDestroyed){\n        continue;\n      }\n      // nextX + SHAPEWIDTH > PLAYWIDTH || nextX < 0 ? this.state.dx * -1 : this.state.dx);\n      if(ball.state.curY + SHAPEWIDTH > PLAYHEIGHT || ball.state.curY < 0 ){\n        ball.bounce();\n      }\n      if((ball.state.curY >= this.state.paddleDistFromWall && ball.state.curY <= this.state.paddleDistFromWall+PLAYHEIGHT/4) && (ball.state.curX <= 25)){\n        if(this.paddleRef !== null){\n          const newAngle = this.paddleRef.redirectBall(ball.state.curX, ball.state.curY);\n          ball.bounceOffPaddle(newAngle);\n        }\n      }\n      if(ball.state.curX <= 1){\n        this.props.loseCallback(\"Lost\", \"We're not sure yet\");\n      } else if(ball.state.curX >= PLAYWIDTH - 30){\n        this.props.sendBallCallBack(ball.state.curY);\n        ball.wasDestroyed = true;\n        balls.splice(idx, 1);\n        idx -= 1;\n        console.log(\"NUMBER OF BALLS NOW!! \",balls.length);\n      } else {\n        ball.updatePosition();\n        nextBalls.push(balls[idx]);\n      }\n    }\n    this.setState({\n      balls:nextBalls,\n      needToUpdate: true\n    })\n}\n\n  render() {\n    return (\n        <div style={{height:\"\"+this.props.height+\"px\", width: \"\"+this.props.width+\"px\", border: \"solid\", position : \"relative\", top: \"0px\"}}>\n           {this.state.balls.map((elem) => <Ball key={elem.originatingPlayer} {...elem} ref={elem.originatingPlayer}/>)}\n           <Paddle playHeight={PLAYHEIGHT} distanceFromWall={this.state.paddleDistFromWall} color={this.props.playerColor} ref={ref=>this.paddleRef=ref}/>\n           {this.state.balls.length}\n    </div>\n    );\n  }\n  componentDidMount(){\n    if(this.fieldInput !== null){this.fieldInput.focus()}\n    //this.updaterID = setInterval(() => this.repositionBalls() ,10);\n    document.addEventListener(\"keypress\", (e)=>this.handleInput(e), false);\n    this.setState({needToUpdate:true});\n  }\n  componentWillUnmount(){\n    //clearInterval(this.updaterID);\n  }\n  componentDidUpdate(prevProps:PongProps, prevState:PongState){\n    if(this.state.needToUpdate && !prevState.needToUpdate){\n      setTimeout(() => this.repositionBalls() ,10);\n      this.setState({needToUpdate:false});\n    }\n  }\n\n\n  handleInput(e:any){\n    let move = 0;\n    if (e.key == \"j\" && this.state.paddleDistFromWall < PLAYHEIGHT*3/4){\n      move = 20; // move down screen\n    } else if (e.key == \"k\" && this.state.paddleDistFromWall >= 5) {\n      move = -20; // move up screen\n    }\n    this.setState({\n      paddleDistFromWall: this.state.paddleDistFromWall + move\n    })\n  }\n}\n\nexport default Pong;\n","import React, { Component, ButtonHTMLAttributes } from 'react';\nimport { TwitterPicker, ColorResult} from 'react-color';\n\n\ninterface LoginPageProps {\n    // properties this component recieves from parent here\n    handleJoin?: (name:string, ballColor:string) => void;\n    // handleJoin?: () => void;\n}\n\ninterface LoginPageState {\n    // any variables that can affect the UI (when updated should re-render)\n    enteredUsername: string;\n    ballColor: string;\n}\n\nclass LoginPage extends React.Component<LoginPageProps, LoginPageState> {\n    constructor(props: LoginPageProps) {\n        super(props);\n        this.state = {\n            enteredUsername: \"\",\n            ballColor: \"#00FF00\"\n        };\n        this.updateUsername = this.updateUsername.bind(this);\n    }\n    public render(){\n        return (\n            <div className = \"LoginPage\">\n                <h1>\n                    WELCOME TO PIPE PONG\n                    {\" \" + this.state.enteredUsername.toUpperCase() + \"!!!\"}\n                </h1>\n                <button onClick={() => this.handleJoin()} style={{background:this.state.ballColor}}>\n                Join Game\n                </button>\n                <input value = {this.state.enteredUsername} onChange = {this.updateUsername}/>\n                {/* </input> */}\n                <br/>\n                <h4>\n                Choose your color!\n                </h4>\n                <TwitterPicker color= {this.state.ballColor} onChange={(c)=>this.changeColor(c)} />\n\n                <br/>\n                <h3>\n                    Rules\n                </h3>\n                <p>\n                    Welcome! This is just like a regular game of Pong, just hit the ball back towards the right with your paddle\n                    and stay in the game as long as possible.\n                    <br/>\n                    When a ball goes through a pipe it will go to the player listed on the pipe \n                    (So make sure to send lots to those high ranking players)\n                    <br/>\n                </p>\n                    \n                <h3>\n                    Controls\n                </h3>\n                <p>\n                    Move your paddle up with 'k' and down with 'j'.\n                    <br/>\n                   HAVE THE 'click here to play' SELECTED TO BE ABLE TO MOVE THE  PADDLE\n                    <br/>\n                </p>\n            </div>\n        )\n    }\n    handleJoin(){\n        if(this.props.handleJoin !== undefined){\n            this.props.handleJoin(this.state.enteredUsername, this.state.ballColor);\n        }\n    }\n   \n    updateUsername(username: React.ChangeEvent<HTMLInputElement>){\n       this.setState({\n            enteredUsername: username.target.value\n       });\n    }\n    changeColor(color:ColorResult){\n        this.setState({\n            ballColor: color.hex\n        })\n    }\n}\n\nexport default LoginPage;\n","import solace from 'solclientjs';\n\nconst HOSTURL = \"ws://mr4b11zr98z.messaging.mymaas.net:80\";\nvar USERNAME = \"solace-cloud-client\";\nconst VPN = \"msgvpn-4b11zr985\";\nconst PASS = \"13hvb0guu1h4c5934o0cjn1rkl\";\n\nvar TopicPublisher = function (topicName) {\n    var factoryProps = new solace.SolclientFactoryProperties();\n    // factoryProps.profile = solace.SolclientFactoryProfiles.version10;\n    solace.SolclientFactory.init(factoryProps);\n\n    var publisher = {};\n    publisher.session = null;\n    publisher.topicName = topicName;\n    publisher.connected = false;\n\n    console.log('\\n*** Publisher to topic \"' + publisher.topicName + '\" is ready to connect ***');\n\n    // Establishes connection to Solace message router\n    publisher.connect = function () {\n        // extract params\n        if (publisher.session !== null) {\n            console.log('Already connected and ready to publish messages.');\n            return;\n        }\n        var hosturl = HOSTURL;\n        // check for valid protocols\n        if (hosturl.lastIndexOf('ws://', 0) !== 0 && hosturl.lastIndexOf('wss://', 0) !== 0 &&\n            hosturl.lastIndexOf('http://', 0) !== 0 && hosturl.lastIndexOf('https://', 0) !== 0) {\n            console.log('Invalid protocol - please use one of ws://, wss://, http://, https://');\n            return;\n        }\n        var username = USERNAME;\n        var pass = PASS;\n        var vpn = VPN;\n        if (!hosturl || !username || !pass || !vpn) {\n            console.log('Cannot connect: please specify all the Solace message router properties.');\n            return;\n        }\n        console.log('Connecting to Solace message router using url: ' + hosturl);\n        console.log('Client username: ' + username);\n        console.log('Solace message router VPN name: ' + vpn);\n        // create session\n        try {\n            publisher.session = solace.SolclientFactory.createSession({\n                // solace.SessionProperties\n                url:      hosturl,\n                vpnName:  vpn,\n                userName: username,\n                password: pass,\n            });\n        } catch (error) {\n            console.log(error.toString());\n        }\n        // define session event listeners\n        publisher.session.on(solace.SessionEventCode.UP_NOTICE, function (sessionEvent) {\n            publisher.connected = true;\n            console.log('=== Successfully connected and ready to publish messages. ===');\n        });\n        publisher.session.on(solace.SessionEventCode.CONNECT_FAILED_ERROR, function (sessionEvent) {\n            publisher.connected = false;\n            console.log('Connection failed to the message router: ' + sessionEvent.infoStr +\n                ' - check correct parameter values and connectivity!');\n        });\n        publisher.session.on(solace.SessionEventCode.DISCONNECTED, function (sessionEvent) {\n            publisher.connected = false;\n            console.log('Disconnected.');\n            if (publisher.session !== null) {\n                publisher.session.dispose();\n                publisher.session = null;\n            }\n        });\n\n        publisher.connectToSolace();   \n\n    };\n\n    // Actually connects the session triggered when the iframe has been loaded - see in html code\n    publisher.connectToSolace = function () {\n        try {\n            publisher.session.connect();\n        } catch (error) {\n            console.log(error.toString());\n        }\n    };\n\n    // Publishes one message\n    publisher.publish = function (messageText) {\n        if (publisher.session !== null) {\n            var message = solace.SolclientFactory.createMessage();\n            message.setDestination(solace.SolclientFactory.createTopicDestination(publisher.topicName));\n            message.setBinaryAttachment(messageText);\n            message.setDeliveryMode(solace.MessageDeliveryModeType.DIRECT);\n            console.log('Publishing message \"' + messageText + '\" to topic \"' + publisher.topicName + '\"...');\n            try {\n                publisher.session.send(message);\n                console.log('Message published.');\n            } catch (error) {\n                console.log(error.toString());\n            }\n        } else {\n            console.log('Cannot publish because not connected to Solace message router.');\n        }\n    };\n\n    // Gracefully disconnects from Solace message router\n    publisher.disconnect = function () {\n        publisher.connected = false;\n        console.log('Disconnecting from Solace message router...');\n        if (publisher.session !== null) {\n            try {\n                publisher.session.disconnect();\n            } catch (error) {\n                console.log(error.toString());\n            }\n        } else {\n            console.log('Not connected to Solace message router.');\n        }\n    };\n\n    return publisher;\n};\n\nexport default TopicPublisher;","\n// import solace from 'solclientjs';\n\nvar solace = require('solclientjs');\n\nvar HOSTURL = \"ws://mr4b11zr98z.messaging.mymaas.net:80\";\nvar USERNAME = \"solace-cloud-client\";\nvar VPN = \"msgvpn-4b11zr985\";\nvar PASS = \"13hvb0guu1h4c5934o0cjn1rkl\";\n\nvar TopicSubscriber = function (topicName, receiveHandler) {\n    var factoryProps = new solace.SolclientFactoryProperties();\n    // factoryProps.profile = solace.SolclientFactoryProfiles.version10;\n    solace.SolclientFactory.init(factoryProps);\n    var subscriber = {};\n    subscriber.session = null;\n    subscriber.topicName = topicName;\n    subscriber.subscribed = false;\n    subscriber.connected = false;\n\n    // Logger\n    // subscriber.log = function (line) {\n    //     var now = new Date();\n    //     var time = [('0' + now.getHours()).slice(-2), ('0' + now.getMinutes()).slice(-2),\n    //         ('0' + now.getSeconds()).slice(-2)];\n    //     var timestamp = '[' + time.join(':') + '] ';\n    //     console.log(timestamp + line);\n    //     var logTextArea = document.getElementById('log');\n    //     logTextArea.value += timestamp + line + '\\n';\n    //     logTextArea.scrollTop = logTextArea.scrollHeight;\n    // };\n\n    console.log('\\n*** Subscriber to topic \"' + subscriber.topicName + '\" is ready to connect ***');\n\n    // Establishes connection to Solace router\n    subscriber.connect = function () {\n        // extract params\n        if (subscriber.session !== null) {\n            console.log('Already connected and ready to subscribe.');\n            return;\n        }\n        var hosturl = HOSTURL;\n        // check for valid protocols\n        if (hosturl.lastIndexOf('ws://', 0) !== 0 && hosturl.lastIndexOf('wss://', 0) !== 0 &&\n            hosturl.lastIndexOf('http://', 0) !== 0 && hosturl.lastIndexOf('https://', 0) !== 0) {\n            console.log('Invalid protocol - please use one of ws://, wss://, http://, https://');\n            return;\n        }\n        var username = USERNAME;\n        var pass = PASS;\n        var vpn = VPN;\n        if (!hosturl || !username || !pass || !vpn) {\n            console.log('Cannot connect: please specify all the Solace message router properties.');\n            return;\n        }\n        console.log('Connecting to Solace message router using url: ' + hosturl);\n        console.log('Client username: ' + username);\n        console.log('Solace message router VPN name: ' + vpn);\n        // create session\n        try {\n            subscriber.session = solace.SolclientFactory.createSession({\n                // solace.SessionProperties\n                url:      hosturl,\n                vpnName:  vpn,\n                userName: username,\n                password: pass,\n            });\n        } catch (error) {\n            console.log(error.toString());\n        }\n        // define session event listeners\n        subscriber.session.on(solace.SessionEventCode.UP_NOTICE, function (sessionEvent) {\n            console.log('=== Successfully connected and ready to subscribe. ===');\n            subscriber.subscribe();\n            subscriber.connected = true;\n        });\n        subscriber.session.on(solace.SessionEventCode.CONNECT_FAILED_ERROR, function (sessionEvent) {\n            subscriber.connected = false;\n            console.log('Connection failed to the message router: ' + sessionEvent.infoStr +\n                ' - check correct parameter values and connectivity!');\n        });\n        subscriber.session.on(solace.SessionEventCode.DISCONNECTED, function (sessionEvent) {\n            subscriber.connected = false;\n            console.log('Disconnected.');\n            subscriber.subscribed = false;\n            if (subscriber.session !== null) {\n                subscriber.session.dispose();\n                subscriber.session = null;\n            }\n        });\n        subscriber.session.on(solace.SessionEventCode.SUBSCRIPTION_ERROR, function (sessionEvent) {\n            console.log('Cannot subscribe to topic: ' + sessionEvent.correlationKey);\n        });\n        subscriber.session.on(solace.SessionEventCode.SUBSCRIPTION_OK, function (sessionEvent) {\n            if (subscriber.subscribed) {\n                subscriber.subscribed = false;\n                console.log('Successfully unsubscribed from topic: ' + sessionEvent.correlationKey);\n            } else {\n                subscriber.subscribed = true;\n                console.log('Successfully subscribed to topic: ' + sessionEvent.correlationKey);\n                console.log('=== Ready to receive messages. ===');\n            }\n        });\n        // define message event listener\n        subscriber.session.on(solace.SessionEventCode.MESSAGE, function (message) {\n            receiveHandler(JSON.parse(message.Ok));\n            console.log('Received message: \"' + message.getBinaryAttachment() + '\", details:\\n' +\n                message.dump());\n        });\n\n\n       subscriber.connectToSolace();\n    };\n\n    // Actually connects the session triggered when the iframe has been loaded - see in html code\n    subscriber.connectToSolace = function () {\n        try {\n            subscriber.session.connect();\n        } catch (error) {\n            console.log(error.toString());\n        }\n    };\n\n    // Subscribes to topic on Solace message router\n    subscriber.subscribe = function () {\n        if (subscriber.session !== null) {\n            if (subscriber.subscribed) {\n                console.log('Already subscribed to \"' + subscriber.topicName\n                    + '\" and ready to receive messages.');\n            } else {\n                console.log('Subscribing to topic: ' + subscriber.topicName);\n                try {\n                    subscriber.session.subscribe(\n                        solace.SolclientFactory.createTopicDestination(subscriber.topicName),\n                        true, // generate confirmation when subscription is added successfully\n                        subscriber.topicName, // use topic name as correlation key\n                        10000 // 10 seconds timeout for this operation\n                    );\n                } catch (error) {\n                    console.log(error.toString());\n                }\n            }\n        } else {\n            console.log('Cannot subscribe because not connected to Solace message router.');\n        }\n    };\n\n    // Unsubscribes from topic on Solace message router\n    subscriber.unsubscribe = function () {\n        if (subscriber.session !== null) {\n            if (subscriber.subscribed) {\n                console.log('Unsubscribing from topic: ' + subscriber.topicName);\n                try {\n                    subscriber.session.unsubscribe(\n                        solace.SolclientFactory.createTopicDestination(subscriber.topicName),\n                        true, // generate confirmation when subscription is removed successfully\n                        subscriber.topicName, // use topic name as correlation key\n                        10000 // 10 seconds timeout for this operation\n                    );\n                } catch (error) {\n                    console.log(error.toString());\n                }\n            } else {\n                console.log('Cannot unsubscribe because not subscribed to the topic \"'\n                    + subscriber.topicName + '\"');\n            }\n        } else {\n            console.log('Cannot unsubscribe because not connected to Solace message router.');\n        }\n    };\n\n    // Gracefully disconnects from Solace message router\n    subscriber.disconnect = function () {\n        subscriber.connected = false;\n        console.log('Disconnecting from Solace message router...');\n        if (subscriber.session !== null) {\n            try {\n                subscriber.session.disconnect();\n            } catch (error) {\n                console.log(error.toString());\n            }\n        } else {\n            console.log('Not connected to Solace message router.');\n        }\n    };\n\n    return subscriber;\n};\nexport default TopicSubscriber;","import TopicPublisher from './TopicPublisher'\nimport TopicSubscriber from './TopicSubscriber'\n\nclass CommHandler {\n    constructor(joinHandler, ballHandler, leaveHandler, leaderboardHandler, pingHandler){\n        // define all the subscribers\n        // var testHandler = function(){\n        //     console.log(\"Test message was sent\")\n        // }\n        // define all the publishers\n\n        // this.testPublisher = TopicPublisher('test');\n        this.joinPublisher = TopicPublisher('join');\n        this.ballPublisher = TopicPublisher('ball');\n        this.leavePublisher = TopicPublisher('leave');\n        this.pongPublisher = TopicPublisher('pong');\n        // this.testSubscriber = TopicSubscriber('test', testHandler);\n        this.joinSubscriber = TopicSubscriber('join', joinHandler);\n        this.ballSubscriber = TopicSubscriber('ball', ballHandler);\n        this.leaveSubscriber = TopicSubscriber('leave', leaveHandler);\n        this.leaderboardSubscriber = TopicSubscriber('leaderboard', leaderboardHandler);\n        this.pingSubscriber = TopicSubscriber('ping', pingHandler)\n    }\n\n    connect = function(){\n        // connect all the publishers to the communication channel\n        // this.testPublisher.connect();\n        this.joinPublisher.connect();\n        this.ballPublisher.connect();\n        this.leavePublisher.connect();\n        this.pongPublisher.connect();\n\n        // connect all the subscribers to the communication channel\n        // this.testSubscriber.connect();\n        this.joinSubscriber.connect();\n        this.ballSubscriber.connect();\n        this.leaveSubscriber.connect();\n        this.leaderboardSubscriber.connect();\n        this.pingSubscriber.connect();\n    }\n\n    publishJoin = function(sessionId, name, color){\n        var message = {\n            sessionId: sessionId,\n            name: name,\n            color: color\n        }\n        this.joinPublisher.publish(JSON.stringify(message));\n    }\n    publishBall = function(sessionId, targetSessionId, angle, velocity){\n        var message = {\n            sessionId: sessionId,\n            targetSessionId: targetSessionId,\n            angle: angle,\n            velocity: velocity\n        }\n        this.ballPublisher.publish(JSON.stringify(message));\n    }\n    publishLeave = function(sessionId, reason, killedBy){\n        var message = {\n            sessionId: sessionId,\n            reason: reason,\n            killedBy: killedBy\n        }\n        this.leavePublisher.publish(JSON.stringify(message));\n    }\n    publishPong = function(sessionId){\n        var message = {\n            sessionId: sessionId\n        }\n        this.pongPublisher.publish(JSON.stringify(message));\n    }\n    publishTest = function(item){\n        var message = {\n            item: item\n        }\n        this.testPublisher.publish(JSON.stringify(message));\n    }\n}\n\nexport default CommHandler;","function processLeaderBoardList(leaderboard, height){\n    var total = leaderboard.sum(\"timeAlive\");\n    var offset = 0;\n    leaderboard.map((player)=>{\n        player.timeAlive = Date.now() - player.time\n        player.height = height*player.timeAlive/total;\n        player.y = offset;\n        offset += player.height;\n    })\n    leaderboard.sort(compareLifetimes);\n}\n\nfunction compareLifetimes(b, a){\n    if (a.timeAlive < b.timeAlive) return -1;\n    if (a.timeAlive > b.timeAlive) return 1;\n    return 0;\n}\n\nArray.prototype.sum = function(prop){\n    var total = 0;\n    for (var i = 0, _len = this.length; i<_len; i++){\n        total += this[i][prop]\n    }\n    return total\n}\n\nexport {processLeaderBoardList}","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types'\n\nconst PIPE_WIDTH = 100;\n\n\nclass Pipe extends Component {\n    constructor(props){\n        super(props);\n    }\n    render() {\n        return (\n            <Fragment>\n                <tr width={this.props.width}\n                        height={this.props.height}\n                        y={this.props.y}\n                        >\n                    <td\n                      style={{\n                        backgroundColor: this.props.color,\n                        border: \"15px solid white\",\n                        borderLeftColor: this.props.color,\n                      }}>\n                        {this.props.name}\n                    </td>\n                </tr>\n            </Fragment>\n        );\n    }\n}\nPipe.propTypes = {\n    height: PropTypes.number,\n    width: PropTypes.number,\n    x: PropTypes.number,\n    y: PropTypes.number,\n    name: PropTypes.string,\n    color: PropTypes.string,\n    sessionId: PropTypes.int,\n};\n\nexport default Pipe;\n","import React, { Component, Fragment } from 'react';\nimport Pipe from './Pipe';\nimport PropTypes from 'prop-types'\n\n\nclass Leaderboard extends Component {\n    constructor(props){\n        super(props);\n    }\n    render() {\n        return (\n            <table height={this.props.height} width={this.props.width} x={this.props.x} y={this.props.y}>\n                {this.props.leaderboard.map((player)=>{\n                    return <Pipe height={player.height} \n                        sessionId={player.sessionId} \n                        name={player.name} \n                        color={player.color} \n                        width={this.props.width} \n                        y={player.y}/>\n                })}\n            </table>\n        );\n    }\n}\n\nLeaderboard.propTypes ={\n    height: PropTypes.number,\n    leaderboard: PropTypes.array\n}\n\nexport default Leaderboard;","import React, { Component, Fragment } from 'react';\nimport './App.css';\nimport Pong from './components/Pong';\nimport Login from './components/LoginPage';\nimport CommHandler from './comms/CommHandler';\nimport {v4} from 'uuid'\nimport {processLeaderBoardList} from './tools/LeaderboardProcessor'\nimport Leaderboard from './components/Leaderboard';\n\nconst PONG_HEIGHT:number = 400;\nconst PONG_WIDTH:number= 800;\n\ninterface CLASSProps {\n}\n\ninterface player{\n  height:number;\n  y:number;\n  sessionId:string;\n  color:string;\n  timeAlive:number;\n}\n\ninterface CLASSState {\n    joined: Boolean;\n    name: string;\n    color: string;\n    sessionId: string;\n    leaderboard: Array<player>;\n    lost: Boolean;\n}\n\ninterface JoinMessage {\n  sessionId:string;\n  name:string;\n  color:string;\n}\ninterface LeaderBoardMessage {\n  leaderboard:Array<player>;\n}\ninterface LeaveMessage {\n  sessionId:string;\n  reason:string;\n  killedBy:string;\n}\ninterface BallMessage {\n  sessionId:string;\n  targetSessionId:string;\n  velocity:number;\n  angle:number;\n}\n\nclass App extends React.Component<CLASSProps, CLASSState> {\n    commHandler:CommHandler;\n    pong:Pong|null;\n    constructor(props: CLASSProps) {\n        super(props);\n        this.state = {\n            joined: false,\n            name: \"\",\n            color: \"#00FF00\",\n            sessionId: \"\",\n            leaderboard: [],\n            lost: false,\n        }\n        this.pong = null;\n        this.leaderboardCallBack = this.leaderboardCallBack.bind(this);\n        this.leaveGame = this.leaveGame.bind(this);\n        this.loseGame = this.loseGame.bind(this);\n        this.sendBall = this.sendBall.bind(this);\n        this.ballCallBack = this.ballCallBack.bind(this);\n        this.pingCallBack = this.pingCallBack.bind(this);\n        this.commHandler = new CommHandler(this.joinCallBack, this.ballCallBack, this.leaveCallBack, this.leaderboardCallBack, this.pingCallBack);\n        this.commHandler.connect();\n    };\n\n  join(name:string, color:string) {\n    var sessionId:string = v4();\n    this.setState({\n        joined: true,\n        name: name,\n        color: color,\n        sessionId: sessionId,\n    });\n    this.commHandler.publishJoin(sessionId,\n                                 name,\n                                 color)\n  }\n  leaderboardCallBack(message:LeaderBoardMessage){\n    var leaderboard = message.leaderboard;\n    processLeaderBoardList(leaderboard, PONG_HEIGHT);\n    this.setState({\n      leaderboard: leaderboard\n    })\n  }\n  joinCallBack(message:JoinMessage){\n    console.log(\"Join Callback\", message);\n  }\n  leaveCallBack(message:LeaveMessage){\n    console.log(\"Leave Callback\", message);\n  }\n  ballCallBack(message:BallMessage){\n    console.log(\"a ball was found\")\n    if (this.state.sessionId == message.targetSessionId){\n      console.log(\"a ball was received\")\n\n      this.generateBall(message.velocity, message.angle, message.sessionId);\n    }\n  }\n  pingCallBack(){\n    console.log(\"received ping\")\n    this.commHandler.publishPong(this.state.sessionId);\n  }\n\n  generateBall(velocity:number, angle:number, source:string){\n    console.log(\"A ball was made with\\nvelocity: \" + velocity + \"\\nangle: \" + angle)\n    let colour = \"black\";\n    for(let p of this.state.leaderboard){\n      if(p.sessionId === source){\n        colour = p.color;\n        break;\n      }\n    }\n    const ballID = v4()\n    if(this.pong){\n      this.state.leaderboard[0].sessionId\n      this.pong.addBall(700, 100, colour, velocity, angle, ballID);\n    }\n  }\n\n  leaveGame(sessionId:string, reason:string, killedBy:string){\n    this.setState({\n      joined: false\n    })\n    this.commHandler.publishLeave(sessionId, reason, killedBy);\n  }\n\n  loseGame(reason:string, killedBy:string){\n    this.setState({\n      joined: false,\n      lost: true\n    });\n    setTimeout(()=>{\n      this.setState({\n        lost: false\n      });\n      this.leaveGame(this.state.sessionId, reason, killedBy);\n    }, 2000)\n  }\n\n  sendBall(y:number){\n    var targetSessionId = this.findPlayerByHeight(y);\n    var sessionId = this.state.sessionId;\n    this.commHandler.publishBall(sessionId, targetSessionId, 2, 5);\n  }\n\n  findPlayerByHeight(y:number){\n    for(let player of this.state.leaderboard){\n      if (y>=player.y && y<player.y+player.height){\n        return player.sessionId;\n      }\n    }\n  }\n\n  render() {\n      if(this.state.lost)\n        return (\n          <h1>You Lost!</h1>\n        )\n      else if(this.state.joined)\n        return(\n          <Fragment>\n            <table>\n              <tr>\n                <td>\n                  <Pong key=\"PONGGAME\" ref={pong => {this.pong = pong}} height={PONG_HEIGHT} width={PONG_WIDTH} leaderboard={this.state.leaderboard} playerColor={this.state.color} loseCallback={this.loseGame} sendBallCallBack={this.sendBall}/>\n                </td>\n                <td>\n                  <Leaderboard leaderboard={this.state.leaderboard} height={PONG_HEIGHT} width={PONG_WIDTH/10} x={9*PONG_WIDTH/10} y=\"0\"/>\n                </td>\n              </tr>\n            </table>\n            <button onClick={() => this.leaveGame(this.state.sessionId, \"Left\", \"Noone\")}>Leave</button>\n          </Fragment>\n        );\n      else\n        return(<Login handleJoin={(name,color) => this.join(name,color)}/>);\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}